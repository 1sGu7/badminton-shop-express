events {
    worker_connections 512;  # Giảm số connection
    multi_accept off;       # Tắt multi_accept để giảm tải
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging - giảm logging để tiết kiệm I/O
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

    access_log /var/log/nginx/access.log main buffer=16k;
    error_log /var/log/nginx/error.log debug; # Tạm thời set debug level để troubleshoot

    # Tối ưu performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 5m;

    # Tối ưu gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 4;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json;

    # Rate limiting cho API
    limit_req_zone $binary_remote_addr zone=api:5m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:5m;

    # Upstream cho Node.js app
    upstream app_backend {
        server badminton-shop:3000;
        keepalive 32;
    }

    # HTTP server - Xử lý ACME challenge và redirect
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name www.phgbao.id.vn;

        # Root directory for ACME challenge
        root /usr/share/nginx/html;
        
        # ACME challenge location
        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            allow all;
        }

        # Redirect tất cả các request khác sang HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.phgbao.id.vn;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/www.phgbao.id.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.phgbao.id.vn/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/www.phgbao.id.vn/chain.pem;

        # Tối ưu SSL
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Proxy settings
        location / {
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            limit_req zone=api burst=10 nodelay;
            limit_conn addr 10;
        }

        # Static file caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            root /usr/share/nginx/html;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'healthy\n';
        }
    }
}
